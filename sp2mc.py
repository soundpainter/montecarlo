## Script to add Montecarlo testbench to Spectre netlist generated by ADE-L.
## Original file is unchanged and new file is appended with "_mc" before extension(".scs").
## In new file, original analysis is included inside montecarlo
## Each sweep is seperated into multiple montecarlo since only one sweep
## is allowed in one montecarlo.
import os

target_filename = "input.scs"   # Original Spectre file generated by ADE-L
target_mosfets = {"ats_np_compare_minjong_eco3": ["M0", "M1"], "temp_circuit": ["M8", "M9"]}

with open(target_filename) as target_file:
    new_file = open(os.path.splitext(target_filename)[0] + "_mc.scs", "w")
    include_counter = 0         # to include mc/mismatch in mode once, count include statement
    for line in target_file:
        if "include" in line:   # replace model section with mc/mismatch
            include_counter += 1
            model_header = line.split()[0:2]
            if include_counter == 1:    # replace only one time
                new_file.write(' '.join(model_header) + " section=bv_6ghd\n")
                new_file.write(' '.join(model_header) + " section=mc\n")
                new_file.write(' '.join(model_header) + " section=mismatch\n")
        if "include" not in line:
            if "subckt " + target_mosfets.keys()[1] in line:
                if "ends " in line:
                    break
                print(line),
                new_file.write(line)
                for line in target_file:
                    print(line),
                    new_file.write(line)
                    if "ends " in line:
                        break
#                if ''.join(target_mosfets.values()[0]) in line or ''.join(target_mosfets.values()[1]) in line:
#                    print(line)
            new_file.write(line)
    #new_file.writelines(target_file.readlines())

new_file.close()
